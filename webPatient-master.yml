server:
  #端口号
  port: 9046
  servlet:
    context-path: /webPatient
##数据库连接信息
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: inter-hsp-webPatient
  servlet:
    multipart:
      enabled: true
      max-file-size: 30MB
      max-request-size: 100MB
  datasource:
    url: jdbc:mysql://10.10.10.100:3307/internethsp?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
    username: root
    password:
    driver-class-name: com.mysql.jdbc.Driver
    ###################以下为druid增加的配置###########################
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    druid:
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      remove-abandoned-timeout: 1800
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: true
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
      filters:
        commons-log:
          connection-logger-name: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      log-abandoned: true
      remove-abandoned: true
      remove-abandoned-timeout-millis: 1800
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: admin
        reset-enable: false

  #JPA配置
  jpa:
    database: mysql
    show-sql: true
    #Hibernate ddl auto
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        jdbc:
          lob:
            non_contextual_creation: true
  redis:
    host: 10.10.10.242
    port: 6379
    timeout: 20000
    #    集群环境打开下面注释，单机不需要打开
    #    cluster:
    #      集群信息
    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx
    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections
    #      maxRedirects: 3
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1
        min-idle: 0
    password:


#http client配置服务
http:
  #最大连接数
  maxTotal: 100
  #并发数
  defaultMaxPerRoute: 20
  #创建连接的最长时间
  connectTimeout: 100000
  #从连接池中获取到连接的最长时间
  connectionRequestTimeout: 500
  #数据传输的最长时间
  socketTimeout: 100000
  #提交请求前测试连接是否可用
  staleConnectionCheckEnabled: true
#用户下最多绑定的就诊人数量
params:
  bindPatients: 10

eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://admin:admin@127.0.0.1:9092/eureka/eureka
    enabled: true  
#      http://localhost:9092/eureka/
      #开启熔断
feign:
  client:
    config:
      default:
        connectTimeout: 300000  #设置httpclient链接超时时间
        readTimeout: 300000   #设置httpclient响应超时时间
  hystrix:
    enabled: true
   


## 这个要有，如果不加，只加了上面也没用
ribbon:
  eureka:
    enabled: true
    ReadTimeout: 10000    #设置httpclient响应超时时间
    ConnectTimeout: 30000    #设置httpclient链接超时时间
    MaxAutoRetries: 1 #同一台实例最大重试次数,不包括首次调用
    MaxAutoRetriesNextServer: 0 #重试负载均衡其他的实例最大重试次数,不包括首次调用
    OkToRetryOnAllOperations: true  #是否所有操作都重试

hystrix:
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 50000    #短路多久以后开始尝试是否恢复，默认5s
      execution:
        #timeout:
         # enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 45000     #超时时间（默认为1000ms）
          strategy: SEMAPHORE             #设置在调用线程上执行，并发请求受限于信号量计数

tx-lcn:
  client:
    manager-address: 127.0.0.1:8070
  ribbon:
    loadbalancer:
      dtx:
        enabled: true
  logger:
    enabled: true
    driver-class-name: ${spring.datasource.driver-class-name}
    jdbc-url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
logging:
  level:
    com:
      codingapi:
        txlcn: DEBUG
    org:
      springframework:
        security:
          oauth2: debug  
 #security权限认证配置          
security:
  oauth2:
    resource:
      jwt:
        key-value: client-secret
notifyUrl:
  payUrl: https://boss-dev.cqmbyy.com/webPatient/order/orderPayNotify
  aliAppletPayNotifyUrl: https://boss-dev.cqmbyy.com/webPatient/order/orderAliAppletsPayNotify
  
followUp:
  url: https://h5-dev.cqmbyy.com
  templateConsultId: spqvl0IOrGCj7DuF-bjDkToK-Me1o6gJ9IHk2RE6SAM  #医生问询模板 patient/doctor
  templateRemarkId: t9gNrJoNzzf0ciDOqDWEUon29dq8xLGXTl40bw1Iw5g #关注成功模板 暂未使用
  followRemindOperatingProcedures: 关注公众号，点击以下链接  #操作流程 patient
  followRemindTel: 023-63208687  #电话 patient
  followRemindContent: 欢迎关注铭博互联网医院，找医生咨询可点击查看详情。  #内容 patient
  followRemindUrl: https://h5-prod.cqmbyy.com/dockerlist  #链接 patient
#微信公众号配置
weixin-config:
  app-id: wx51be26479297f13c
  secret: 0e9b72428d30f7718e21469781d34b01
  mch-id: 1265493201
  api-key: Wkmhs2015Wkyy201518600697266yzlz
  ydyy-app-id: wxabe812c9cfd06f10
  ydyy-mch-id: 1553312401
  ydyy-api-key: 260223992b0c4515a0362d8655ba2020
